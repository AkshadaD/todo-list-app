{"ast":null,"code":"var _jsxFileName = \"/home/neosoft/Desktop/ReactPractice/todo-list-app/src/App.js\";\nimport React, { Component } from 'react';\nimport Login from './components/Login/LoginPage';\nimport Todo from './components/ToDo/Todo';\nimport { Register } from './components/Login/RegisterPage';\nimport Aux from './hoc/Aux';\nimport NavbarComp from './components/NavbarComp';\nimport { history } from './_helpers/history';\nimport { alertActions } from './actions/alert_action';\nimport { Router, Switch, Route, Redirect } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { connect } from 'react-redux'; //import uuid from 'uuid';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    history.listen((location, action) => {\n      //clear alert on location change\n      this.props.clearAlerts();\n    });\n  }\n\n  render() {\n    const alert = this.props.alert;\n    return React.createElement(Aux, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(Router, {\n      history: history,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(NavbarComp, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/login\",\n      component: Login,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/register\",\n      component: Register,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/todo\",\n      component: Todo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), React.createElement(Redirect, {\n      to: \"/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nfunction mapState(state) {\n  const alert = state.alert;\n  return {\n    alert\n  };\n}\n\nconst actionCreater = {\n  clearAlerts: alertActions.clear\n};\nconst connectedApp = connect(mapState, actionCreater)(App);\nexport { connectedApp as App };","map":{"version":3,"sources":["/home/neosoft/Desktop/ReactPractice/todo-list-app/src/App.js"],"names":["React","Component","Login","Todo","Register","Aux","NavbarComp","history","alertActions","Router","Switch","Route","Redirect","connect","App","constructor","props","listen","location","action","clearAlerts","render","alert","mapState","state","actionCreater","clear","connectedApp"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,8BAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SAAQC,QAAR,QAAuB,iCAAvB;AACA,OAAOC,GAAP,MAAgB,WAAhB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,SAAQC,OAAR,QAAsB,oBAAtB;AACA,SAAQC,YAAR,QAA2B,wBAA3B;AACA,SAAQC,MAAR,EAAgBC,MAAhB,EAAwBC,KAAxB,EAA+BC,QAA/B,QAA+C,kBAA/C;AACA,OAAO,sCAAP;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CAEA;;AAGA,MAAMC,GAAN,SAAkBb,SAAlB,CAA4B;AAC1Bc,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AAEAT,IAAAA,OAAO,CAACU,MAAR,CAAe,CAACC,QAAD,EAAWC,MAAX,KAAqB;AAElC;AACA,WAAKH,KAAL,CAAWI,WAAX;AACD,KAJD;AAMD;;AAEDC,EAAAA,MAAM,GAAG;AAAA,UACAC,KADA,GACS,KAAKN,KADd,CACAM,KADA;AAEP,WACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAEf,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,SAAS,EAAEL,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,WAAZ;AAAwB,MAAA,SAAS,EAAEE,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,SAAS,EAAED,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAIE,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CAJF,CALF,CADF,CADF;AAuBD;;AArCyB;;AAwC5B,SAASoB,QAAT,CAAkBC,KAAlB,EAAwB;AAAA,QACbF,KADa,GACJE,KADI,CACbF,KADa;AAEpB,SAAO;AAACA,IAAAA;AAAD,GAAP;AACH;;AAED,MAAMG,aAAa,GAAG;AACpBL,EAAAA,WAAW,EAAEZ,YAAY,CAACkB;AADN,CAAtB;AAIA,MAAMC,YAAY,GAAGd,OAAO,CAACU,QAAD,EAAWE,aAAX,CAAP,CAAiCX,GAAjC,CAArB;AAEA,SAAQa,YAAY,IAAIb,GAAxB","sourcesContent":["import React, { Component } from 'react';\nimport Login from './components/Login/LoginPage';\nimport Todo from './components/ToDo/Todo';\nimport {Register} from './components/Login/RegisterPage';\nimport Aux from './hoc/Aux';\nimport NavbarComp from './components/NavbarComp';\nimport {history} from './_helpers/history';\nimport {alertActions} from './actions/alert_action';\nimport {Router, Switch, Route, Redirect } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { connect } from 'react-redux';\n\n//import uuid from 'uuid';\n\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n\n    history.listen((location, action) =>{\n      \n      //clear alert on location change\n      this.props.clearAlerts();\n    })\n\n  }\n\n  render() {\n    const {alert} = this.props;\n    return (\n      <Aux>\n        <Router history={history}>\n          <div>\n            <NavbarComp />\n          </div>\n            \n          <div>\n          {/* {alert.message &&\n                            <div className={`alert ${alert.type}`}>{alert.message}</div>\n          } */}\n            <Switch>\n              <Route path=\"/login\" component={Login} />\n              <Route path=\"/register\" component={Register} />\n              <Route path=\"/todo\" component={Todo} />\n              <Redirect to=\"/login\" />\n            </Switch>\n        \n          </div>\n        </Router>\n      \n      </Aux>\n    );\n  }\n}\n\nfunction mapState(state){\n    const {alert} = state;\n    return {alert};\n}\n\nconst actionCreater = {\n  clearAlerts: alertActions.clear\n}\n\nconst connectedApp = connect(mapState, actionCreater)(App);\n\nexport {connectedApp as App};\n"]},"metadata":{},"sourceType":"module"}