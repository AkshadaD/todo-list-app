{"ast":null,"code":"export const userService = {\n  register\n};\n\nfunction register(user) {\n  const requestOptions = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(user)\n  };\n  return fetch(`/users/register`, requestOptions).then(handleResponse);\n}\n\nfunction handleResponse(response) {\n  return response.text().then(text => {\n    const data = text && JSON.parse(text);\n\n    if (!response.ok) {\n      // if (response.status === 401) {\n      //     // auto logout if 401 response returned from api\n      //     logout();\n      //     location.reload(true);\n      // }\n      const error = data && data.message || response.statusText;\n      return Promise.reject(error);\n    }\n\n    return data;\n  });\n}","map":{"version":3,"sources":["/home/neosoft/Desktop/ReactPractice/todo-list-app/src/services/UserServices.js"],"names":["userService","register","user","requestOptions","method","headers","body","JSON","stringify","fetch","then","handleResponse","response","text","data","parse","ok","error","message","statusText","Promise","reject"],"mappings":"AACA,OAAO,MAAMA,WAAW,GAAG;AACvBC,EAAAA;AADuB,CAApB;;AAIP,SAASA,QAAT,CAAkBC,IAAlB,EAAuB;AACnB,QAAMC,cAAc,GAAG;AACnBC,IAAAA,MAAM,EAAE,MADW;AAEnBC,IAAAA,OAAO,EAAE;AAAC,sBAAgB;AAAjB,KAFU;AAGnBC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,IAAf;AAHa,GAAvB;AAKA,SAAOO,KAAK,CAAE,iBAAF,EAAoBN,cAApB,CAAL,CAAyCO,IAAzC,CAA8CC,cAA9C,CAAP;AACH;;AAGD,SAASA,cAAT,CAAwBC,QAAxB,EAAkC;AAC9B,SAAOA,QAAQ,CAACC,IAAT,GAAgBH,IAAhB,CAAqBG,IAAI,IAAI;AAChC,UAAMC,IAAI,GAAGD,IAAI,IAAIN,IAAI,CAACQ,KAAL,CAAWF,IAAX,CAArB;;AACA,QAAI,CAACD,QAAQ,CAACI,EAAd,EAAkB;AACd;AACA;AACA;AACA;AACA;AAEA,YAAMC,KAAK,GAAIH,IAAI,IAAIA,IAAI,CAACI,OAAd,IAA0BN,QAAQ,CAACO,UAAjD;AACA,aAAOC,OAAO,CAACC,MAAR,CAAeJ,KAAf,CAAP;AACH;;AAED,WAAOH,IAAP;AACH,GAdM,CAAP;AAeH","sourcesContent":["\nexport const userService = {\n    register\n}\n\nfunction register(user){\n    const requestOptions = {\n        method: 'POST',\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify(user)\n    };\n    return fetch(`/users/register`, requestOptions).then(handleResponse);\n}\n\n\nfunction handleResponse(response) {\n    return response.text().then(text => {\n        const data = text && JSON.parse(text);\n        if (!response.ok) {\n            // if (response.status === 401) {\n            //     // auto logout if 401 response returned from api\n            //     logout();\n            //     location.reload(true);\n            // }\n\n            const error = (data && data.message) || response.statusText;\n            return Promise.reject(error);\n        }\n\n        return data;\n    });\n}"]},"metadata":{},"sourceType":"module"}